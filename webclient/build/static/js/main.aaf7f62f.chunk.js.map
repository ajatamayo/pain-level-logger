{"version":3,"sources":["config/index.js","actions/actionTypes.js","actions/authActions.js","actions/appActions.js","constants/localStorage.js","helpers/apiClient.js","services/auth.js","helpers/utils.js","sagas/authSagas.js","actions/shortenerActions.js","services/shortener.js","sagas/shortenerSagas.js","sagas/index.js","reducers/authReducer.js","reducers/appReducer.js","reducers/shortenerReducer.js","reducers/index.js","store.js","components/AppAlert/index.jsx","components/LoginForm/index.jsx","components/Shortener/index.jsx","components/LogoutButton/index.jsx","components/Dashboard/index.jsx","components/RedirectToUrl/index.jsx","App/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","allowedEmailDomain","LOGIN_REQUEST","LOGIN_SUCCESS","LOGINCODE_REQUEST","LOGINCODE_SUCCESS","LOGOUT_REQUEST","APP_ALERT","APP_ALERT_CLEAR","SHORTEN_URL_REQUEST","SHORTEN_URL_SUCCESS","SHORTEN_URL_FAILURE","DECODE_URL_REQUEST","DECODE_URL_SUCCESS","logincodeSuccess","uid","type","appAlertSuccess","message","alertType","appAlertError","error","CLIENT_ID","ACCESS_TOKEN","REFRESH_TOKEN","createClient","axios","create","baseURL","headers","Object","objectSpread","accessToken","localStorage","getItem","refreshToken","clientId","Authorization","concat","X-Refresh-Token","X-Client-Id","getAuthorizationHeaders","createApiClient","resolveAccessToken","res","setItem","get","_createClient","apply","arguments","then","post","_createClient2","put","_createClient3","delete","_createClient4","loginService","credentials","api","grantType","logincodeService","data","deleteTokenService","generateRandomString","_callee","length","buf","_args","regenerator_default","a","wrap","_context","prev","next","undefined","crypto","randomBytes","abrupt","toString","t0","stop","this","getOrGenerateClientId","_callee2","newClientId","_context2","sent","loginFlow","logoutFlow","sendLoginCodeFlow","watchAuthFlow","_ref","code","response","_response$data","call","success","push","_marked","removeItem","_marked2","_ref2","email","_response$data2","_context3","_marked3","_context4","all","takeEvery","_marked4","authSagas","shortenUrlSuccess","longUrl","shortUrl","pk","shortenUrlFailure","decodeUrlSuccess","url","shortenerService","decoderService","encodedPk","shortenUrlFlow","decodeUrlFlow","watchShortenerFlow","shortenerSagas_marked","window","location","href","shortenerSagas_marked2","shortenerSagas_marked3","shortenerSagas","rootSaga","toConsumableArray","sagas_marked","initialState","isFetching","errorMessage","combineReducers","actions","login","request","state","action","isAuthenticated","user","token","jwtDecode","logincode","createLoginCodeReducer","appReducer","urlPairs","redirectUrl","shortenerReducer","some","item","unshift","router","routerReducer","auth","app","shortener","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","run","AppAlert","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleClose","bind","assertThisInitialized","appAlertClear","react_default","createElement","className","es_alert","showIcon","banner","closable","afterClose","Component","mapDispatchToProps","connect","_state$app","FormItem","Form","Item","LoginForm","emailInput","codeInput","setEmailInputRef","element","setCodeInputRef","handleSubmit","focus","e","_this2","preventDefault","form","validateFields","err","input","value","qs","parse","search","loginRequest","logincodeRequest","_qs$parse2","getFieldDecorator","es_form","onSubmit","rules","required","ref","prefix","icon","placeholder","addonAfter","es_button","htmlType","defaultProps","withRouter","Shortener","urlInput","setUrlInputRef","shortenUrlRequest","react","layout","displayName","Shortener_FormItem","disabled","map","key","react_copy_to_clipboard_lib","text","tooltip","trigger","title","ghost","size","_state$shortener","logoutRequest","style","paddingTop","onClick","marginRight","components_Shortener","components_LogoutButton","components_LoginForm","RedirectToUrl","match","params","decodeUrlRequest","components_AppAlert","Switch","Route","exact","path","render","ownProps","components_RedirectToUrl","components_Dashboard","Boolean","hostname","ReactDOM","es","lib","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aaf7f62f.chunk.js","sourcesContent":["module.exports = {\n  allowedEmailDomain: 'qwikwire.com',\n};\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport const LOGINCODE_REQUEST = 'LOGINCODE_REQUEST';\nexport const LOGINCODE_SUCCESS = 'LOGINCODE_SUCCESS';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\n\nexport const APP_ALERT = 'APP_ALERT';\nexport const APP_ALERT_CLEAR = 'APP_ALERT_CLEAR';\n\nexport const SHORTEN_URL_REQUEST = 'SHORTEN_URL_REQUEST';\nexport const SHORTEN_URL_SUCCESS = 'SHORTEN_URL_SUCCESS';\nexport const SHORTEN_URL_FAILURE = 'SHORTEN_URL_FAILURE';\n\nexport const DECODE_URL_REQUEST = 'DECODE_URL_REQUEST';\nexport const DECODE_URL_SUCCESS = 'DECODE_URL_SUCCESS';\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGINCODE_REQUEST,\n  LOGINCODE_SUCCESS,\n  LOGOUT_REQUEST,\n} from './actionTypes';\n\nexport function loginRequest(code, uid) {\n  return { type: LOGIN_REQUEST, code, uid };\n}\n\nexport function loginSuccess(token) {\n  return { type: LOGIN_SUCCESS, accessToken: token };\n}\n\nexport function logincodeRequest(email) {\n  return { type: LOGINCODE_REQUEST, email };\n}\n\nexport function logincodeSuccess(uid) {\n  return { type: LOGINCODE_SUCCESS, uid };\n}\n\nexport function logoutRequest() {\n  return { type: LOGOUT_REQUEST };\n}\n","import {\n  APP_ALERT,\n  APP_ALERT_CLEAR,\n} from './actionTypes';\n\nexport function appAlertSuccess(message) {\n  return { type: APP_ALERT, message, alertType: 'success' };\n}\n\nexport function appAlertError(message, error) {\n  return { type: APP_ALERT, message, alertType: 'error', error };\n}\n\nexport function appAlertClear() {\n  return { type: APP_ALERT_CLEAR };\n}\n","export const CLIENT_ID = 'clientId';\nexport const ACCESS_TOKEN = 'accessToken';\nexport const REFRESH_TOKEN = 'refreshToken';\n","import axios from 'axios';\nimport { CLIENT_ID, ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/localStorage';\n\nfunction getAuthorizationHeaders() {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const refreshToken = localStorage.getItem(REFRESH_TOKEN);\n  const clientId = localStorage.getItem(CLIENT_ID);\n  if (refreshToken && clientId) {\n    return {\n      Authorization: `Bearer ${accessToken}`,\n      'X-Refresh-Token': refreshToken,\n      'X-Client-Id': clientId,\n    };\n  }\n\n  return {};\n}\n\n/*\n  refresh auth header. currently done on each request.\n  if you don't do this on each request, make sure\n  that you keep the header up to date otherwise\n */\nfunction createClient() {\n  return axios.create({\n    baseURL: '/api',\n    headers: {\n      ...getAuthorizationHeaders(),\n    },\n  });\n}\n\nfunction createApiClient() {\n  function resolveAccessToken(res) {\n    const accessToken = res.headers['x-access-token'];\n    if (accessToken) {\n      localStorage.setItem(ACCESS_TOKEN, accessToken);\n    }\n    return res;\n  }\n\n  return {\n    get(...args) {\n      return createClient().get(...args).then(resolveAccessToken);\n    },\n    post(...args) {\n      return createClient().post(...args).then(resolveAccessToken);\n    },\n    put(...args) {\n      return createClient().put(...args).then(resolveAccessToken);\n    },\n    delete(...args) {\n      return createClient().delete(...args).then(resolveAccessToken);\n    },\n  };\n}\n\nexport default createApiClient();\n","import api from '../helpers/apiClient';\n\nexport function loginService(credentials) {\n  return api.post('/auth/login', { grantType: 'password', ...credentials });\n}\n\nexport function logincodeService(data) {\n  return api.post('/auth/send-code', data);\n}\n\nexport function deleteTokenService(data) {\n  return api.delete('/auth/token', { data });\n}\n","import crypto from 'crypto';\nimport { CLIENT_ID, ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/localStorage';\n\nasync function generateRandomString(length = 24) {\n  try {\n    const buf = crypto.randomBytes(length);\n    return buf.toString('hex');\n  } catch (err) {\n    return false;\n  }\n}\n\nasync function getOrGenerateClientId() {\n  try {\n    let clientId;\n    clientId = localStorage.getItem(CLIENT_ID);\n    if (!clientId) {\n      const newClientId = await generateRandomString(40);\n      localStorage.setItem(CLIENT_ID, newClientId);\n      clientId = newClientId;\n    }\n    return clientId;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction removeAuthTokens() {\n  localStorage.removeItem(CLIENT_ID);\n  localStorage.removeItem(ACCESS_TOKEN);\n  localStorage.removeItem(REFRESH_TOKEN);\n}\n\nexport {\n  generateRandomString,\n  getOrGenerateClientId,\n  removeAuthTokens,\n};\n","import { get } from 'lodash';\nimport {\n  all, call, put, takeEvery,\n} from 'redux-saga/effects';\nimport { push } from 'react-router-redux';\n\nimport {\n  LOGIN_REQUEST,\n  LOGOUT_REQUEST,\n  LOGINCODE_REQUEST,\n} from '../actions/actionTypes';\nimport { loginSuccess, logincodeSuccess } from '../actions/authActions';\nimport { appAlertSuccess, appAlertError } from '../actions/appActions';\nimport { deleteTokenService, loginService, logincodeService } from '../services/auth';\nimport { getOrGenerateClientId, removeAuthTokens } from '../helpers/utils';\nimport { CLIENT_ID, ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/localStorage';\n\nexport function* loginFlow({ code, uid }) {\n  try {\n    const clientId = yield call(getOrGenerateClientId);\n    const response = yield call(loginService, { clientId, code, uid });\n    const { success } = response.data;\n    if (success) {\n      const { accessToken, refreshToken } = response.data;\n      localStorage.setItem(CLIENT_ID, clientId);\n      localStorage.setItem(ACCESS_TOKEN, accessToken);\n      localStorage.setItem(REFRESH_TOKEN, refreshToken);\n      yield put(loginSuccess(accessToken));\n      yield put(appAlertSuccess('Login successful.'));\n      yield put(push('/'));\n    } else {\n      yield put(appAlertError(response.data.message));\n    }\n  } catch (error) {\n    const { message } = error.response.data;\n    yield put(appAlertError(message, error));\n  }\n}\n\nexport function* logoutFlow() {\n  const clientId = localStorage.getItem(CLIENT_ID);\n  const refreshToken = localStorage.getItem(REFRESH_TOKEN);\n  try {\n    yield call(deleteTokenService, {\n      clientId,\n      refreshToken,\n    });\n  } catch (e) {\n    // console.log(e);\n  }\n  removeAuthTokens();\n  yield put(push('/'));\n}\n\nexport function* sendLoginCodeFlow({ email }) {\n  try {\n    const response = yield call(logincodeService, { email });\n    const { success, uid } = response.data;\n    if (success) {\n      yield put(appAlertSuccess(`Login code sent to ${email}.`));\n      yield put(logincodeSuccess(uid));\n    } else {\n      yield put(appAlertError('Welp. Something aint right there. :/'));\n    }\n  } catch (error) {\n    const message = get(error, 'response.data.message');\n    yield put(appAlertError(message || 'Woops, something went wrong. :((('));\n  }\n}\n\nexport function* watchAuthFlow() {\n  yield all([\n    takeEvery(LOGIN_REQUEST, loginFlow),\n    takeEvery(LOGOUT_REQUEST, logoutFlow),\n    takeEvery(LOGINCODE_REQUEST, sendLoginCodeFlow),\n  ]);\n}\n\nconst authSagas = [watchAuthFlow()];\n\nexport default authSagas;\n","import {\n  SHORTEN_URL_REQUEST,\n  SHORTEN_URL_SUCCESS,\n  SHORTEN_URL_FAILURE,\n  DECODE_URL_REQUEST,\n  DECODE_URL_SUCCESS,\n} from './actionTypes';\n\nexport function shortenUrlRequest(url) {\n  return { type: SHORTEN_URL_REQUEST, url };\n}\n\nexport function shortenUrlSuccess(longUrl, shortUrl, pk) {\n  return {\n    type: SHORTEN_URL_SUCCESS, longUrl, shortUrl, pk,\n  };\n}\n\nexport function shortenUrlFailure() {\n  return { type: SHORTEN_URL_FAILURE };\n}\n\nexport function decodeUrlRequest(encodedPk) {\n  return { type: DECODE_URL_REQUEST, encodedPk };\n}\n\nexport function decodeUrlSuccess(url) {\n  return { type: DECODE_URL_SUCCESS, url };\n}\n","import api from '../helpers/apiClient';\n\nexport function shortenerService(data) {\n  return api.post('/shortener', data);\n}\n\nexport function decoderService({ encodedPk }) {\n  return api.get(`/shortener/decode/${encodedPk}`);\n}\n","import { get } from 'lodash';\nimport {\n  all, call, put, takeEvery,\n} from 'redux-saga/effects';\n\nimport { SHORTEN_URL_REQUEST, DECODE_URL_REQUEST } from '../actions/actionTypes';\nimport { shortenUrlSuccess, shortenUrlFailure, decodeUrlSuccess } from '../actions/shortenerActions';\nimport { appAlertSuccess, appAlertError } from '../actions/appActions';\nimport { shortenerService, decoderService } from '../services/shortener';\n\nexport function* shortenUrlFlow({ url }) {\n  try {\n    const response = yield call(shortenerService, { url });\n    const {\n      success, longUrl, shortUrl, pk,\n    } = response.data;\n    if (success) {\n      yield put(appAlertSuccess(`${longUrl} shortened! \\\\:D/`));\n      yield put(shortenUrlSuccess(longUrl, shortUrl, pk));\n    } else {\n      yield put(shortenUrlFailure());\n      yield put(appAlertError('Woah! Something aint right there. :/'));\n    }\n  } catch (error) {\n    yield put(shortenUrlFailure());\n    const message = get(error, 'response.data.message');\n    yield put(appAlertError(message || 'Oh no! Something went wrong. :((('));\n  }\n}\n\nexport function* decodeUrlFlow({ encodedPk }) {\n  try {\n    const response = yield call(decoderService, { encodedPk });\n    const { url } = response.data;\n    yield put(decodeUrlSuccess(url));\n    yield call(() => { window.location.href = url; });\n  } catch (error) {\n    const message = get(error, 'response.data.message');\n    yield put(appAlertError(message || 'Oh no! Something went wrong. :((('));\n  }\n}\n\nexport function* watchShortenerFlow() {\n  yield all([\n    takeEvery(SHORTEN_URL_REQUEST, shortenUrlFlow),\n    takeEvery(DECODE_URL_REQUEST, decodeUrlFlow),\n  ]);\n}\n\nconst shortenerSagas = [watchShortenerFlow()];\n\nexport default shortenerSagas;\n","import { all } from 'redux-saga/effects';\n\nimport authSagas from './authSagas';\nimport shortenerSagas from './shortenerSagas';\n\nexport default function* rootSaga() {\n  yield all([\n    ...authSagas,\n    ...shortenerSagas,\n  ]);\n}\n","import { combineReducers } from 'redux';\nimport jwtDecode from 'jwt-decode';\nimport { ACCESS_TOKEN } from '../constants/localStorage';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGINCODE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isFetching: false,\n  errorMessage: null,\n  message: null,\n};\n\nfunction createAuthReducer(actions) {\n  return (state = initialState, action) => {\n    switch (action.type) {\n      case actions.request:\n        return {\n          ...state,\n          isFetching: true,\n          errorMessage: null,\n          message: null,\n        };\n      case actions.success:\n        return { ...state, isFetching: false, message: action.message };\n      default:\n        return state;\n    }\n  };\n}\n\nfunction createLoginCodeReducer(actions) {\n  return (state = { uid: null }, action) => {\n    switch (action.type) {\n      case actions.success:\n        return {\n          ...state,\n          uid: action.uid,\n        };\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default combineReducers({\n  login: createAuthReducer({\n    request: LOGIN_REQUEST,\n    success: LOGIN_SUCCESS,\n  }),\n  isAuthenticated: () => !!localStorage.getItem(ACCESS_TOKEN),\n  user: () => {\n    try {\n      const token = localStorage.getItem(ACCESS_TOKEN);\n      return jwtDecode(token);\n    } catch (error) {\n      return null;\n    }\n  },\n  logincode: createLoginCodeReducer({\n    success: LOGINCODE_SUCCESS,\n  }),\n});\n","import {\n  APP_ALERT,\n  APP_ALERT_CLEAR,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  message: null,\n  alertType: null,\n  error: null,\n};\n\nfunction appReducer(state = initialState, action) {\n  switch (action.type) {\n    case APP_ALERT:\n      return {\n        ...state,\n        message: action.message,\n        alertType: action.alertType,\n        error: action.error,\n      };\n    case APP_ALERT_CLEAR:\n      return {\n        ...state,\n        message: null,\n        alertType: null,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;\n","import {\n  SHORTEN_URL_REQUEST,\n  SHORTEN_URL_SUCCESS,\n  SHORTEN_URL_FAILURE,\n  DECODE_URL_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  urlPairs: [],\n  isFetching: false,\n  redirectUrl: '',\n};\n\nfunction shortenerReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHORTEN_URL_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case SHORTEN_URL_SUCCESS: {\n      const { urlPairs } = state;\n      const { longUrl, shortUrl, pk } = action;\n      if (!urlPairs.some(item => item.pk === pk)) {\n        urlPairs.unshift({ longUrl, shortUrl, pk });\n      }\n      return {\n        ...state,\n        isFetching: false,\n        urlPairs,\n      };\n    }\n    case SHORTEN_URL_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n      };\n    case DECODE_URL_SUCCESS:\n      return {\n        ...state,\n        redirectUrl: action.url,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default shortenerReducer;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport auth from './authReducer';\nimport app from './appReducer';\nimport shortener from './shortenerReducer';\nimport { LOGOUT_REQUEST } from '../actions/actionTypes';\n\nconst appReducer = combineReducers({\n  router: routerReducer,\n  auth,\n  app,\n  shortener,\n});\n\nexport default (state, action) => {\n  if (action.type === LOGOUT_REQUEST) {\n    return appReducer(undefined, action);\n  }\n\n  return appReducer(state, action);\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport rootSaga from './sagas';\nimport rootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nconst enhancers = [];\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  // eslint-disable-next-line no-underscore-dangle\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst store = createStore(connectRouter(history)(rootReducer), initialState, composedEnhancers);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import { get } from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Alert } from 'antd';\nimport { appAlertClear } from '../../actions/appActions';\nimport './appalert.css';\n\nclass AppAlert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose() {\n    this.props.appAlertClear();\n  }\n\n  render() {\n    let message;\n    let alertType;\n    if (401 === get(this, 'props.error.response.status')) {\n      message = 'Please login.';\n      alertType = 'warning';\n    }\n\n    if (this.props.message == null) return false;\n\n    return (\n      <div className=\"alert-wrapper\">\n        <Alert\n          message={message || this.props.message}\n          type={alertType || this.props.alertType}\n          showIcon\n          banner\n          closable\n          afterClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { app: { message, alertType, error } } = state;\n  return {\n    message,\n    alertType,\n    error,\n  };\n};\n\nconst mapDispatchToProps = {\n  appAlertClear,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppAlert);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Form, Icon, Input, Button,\n} from 'antd';\nimport qs from 'query-string';\nimport { allowedEmailDomain } from '../../config';\nimport { loginRequest, logincodeRequest } from '../../actions/authActions';\nimport './loginform.css';\n\nconst FormItem = Form.Item;\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.emailInput = null;\n    this.codeInput = null;\n\n    this.setEmailInputRef = (element) => {\n      this.emailInput = element;\n    };\n\n    this.setCodeInputRef = (element) => {\n      this.codeInput = element;\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.emailInput) {\n      this.emailInput.focus();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.form.validateFields((err) => {\n      if (!err) {\n        const email = this.emailInput.input.value;\n        const code = this.codeInput && this.codeInput.input.value;\n        if (!this.props.uid) {\n          this.props.logincodeRequest(`${email}@${allowedEmailDomain}`);\n        } else {\n          const { uid } = qs.parse(this.props.location.search);\n          this.props.loginRequest(code, this.props.uid || uid);\n        }\n      }\n    });\n  }\n\n  render() {\n    const { code, uid } = qs.parse(this.props.location.search);\n    if (code && uid) {\n      this.props.loginRequest(code, uid);\n      return <p>Logging you in...</p>;\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <p>{`Login using your ${allowedEmailDomain} email to use this service.`}</p>\n        <FormItem className=\"email-form-item\">\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' }],\n          })(<Input\n            ref={this.setEmailInputRef}\n            prefix={<Icon type=\"user\" />}\n            placeholder=\"you\"\n            addonAfter={`@${allowedEmailDomain}`}\n          />)}\n        </FormItem>\n        {this.props.uid && (\n          <FormItem className=\"login-code-form-item\">\n            {getFieldDecorator('code', {\n              rules: [{ required: true, message: 'Please input your login code!' }],\n            })(<Input\n              ref={this.setCodeInputRef}\n              prefix={<Icon type=\"lock\" />}\n              placeholder=\"Paste your-temporary-login-code\"\n            />)}\n          </FormItem>\n        )}\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  logincodeRequest: PropTypes.func.isRequired,\n  loginRequest: PropTypes.func.isRequired,\n  uid: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  form: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n};\n\nLoginForm.defaultProps = {\n  uid: '',\n};\n\nconst mapStateToProps = (state) => {\n  const { auth: { logincode: { uid } } } = state;\n  return {\n    uid,\n  };\n};\n\nconst mapDispatchToProps = {\n  loginRequest,\n  logincodeRequest,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Form.create()(LoginForm)));\n","import { get } from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Button, Form, Icon, Input, Tooltip,\n} from 'antd';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { shortenUrlRequest } from '../../actions/shortenerActions';\nimport './shortener.css';\n\nconst FormItem = Form.Item;\n\nclass Shortener extends Component {\n  constructor(props) {\n    super(props);\n\n    this.urlInput = null;\n\n    this.setUrlInputRef = (element) => {\n      this.urlInput = element;\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.urlInput) {\n      this.urlInput.focus();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.form.validateFields((err) => {\n      if (!err) {\n        const url = this.urlInput.input.value;\n        this.props.shortenUrlRequest(url);\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Fragment>\n        <Form onSubmit={this.handleSubmit} layout=\"inline\" className=\"shortener-form\">\n          <p>{`Welcome, ${this.props.displayName}! Enter a url to shorten :)`}</p>\n          <FormItem className=\"url-input-form-item\">\n            {getFieldDecorator('url', {\n              rules: [{ required: true, message: 'You know you need a url right? :/' }],\n            })(<Input\n              ref={this.setUrlInputRef}\n              prefix={<Icon type=\"global\" />}\n              placeholder=\"https://aqwire.io\"\n              disabled={this.props.isFetching}\n            />)}\n          </FormItem>\n          <FormItem className=\"shortener-button-form-item\">\n            <Button type=\"primary\" htmlType=\"submit\" className=\"shortener-form-button\">\n              Get shortlink!\n            </Button>\n          </FormItem>\n        </Form>\n        {!!this.props.urlPairs.length && (\n          <div className=\"urls\">\n            {this.props.urlPairs.map(item => (\n              <div key={item.pk} className=\"url\">\n                <div className=\"long-url\">\n                  {item.longUrl}\n                </div>\n                <div className=\"short-url\">\n                  <span className=\"display\">{item.shortUrl}</span>\n                  <CopyToClipboard text={item.shortUrl}>\n                    <Tooltip trigger=\"click\" title={`Copied ${item.shortUrl} to clipboard!`}>\n                      <Button ghost type=\"primary\" size=\"small\" icon=\"copy\">\n                        Copy\n                      </Button>\n                    </Tooltip>\n                  </CopyToClipboard>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nShortener.propTypes = {\n  shortenUrlRequest: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  form: PropTypes.object.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  urlPairs: PropTypes.arrayOf(PropTypes.shape({\n    pk: PropTypes.number.isRequired,\n    longUrl: PropTypes.string.isRequired,\n    shortUrl: PropTypes.string.isRequired,\n  })).isRequired,\n  displayName: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { shortener: { urlPairs, isFetching } } = state;\n  const displayName = get(state, 'auth.user.user.displayName');\n\n  return {\n    urlPairs,\n    isFetching,\n    displayName,\n  };\n};\n\nconst mapDispatchToProps = {\n  shortenUrlRequest,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create()(Shortener));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport { logoutRequest } from '../../actions/authActions';\n\nconst LogoutButton = (props) => {\n  const { isAuthenticated } = props;\n  if (isAuthenticated) {\n    return (\n      <div style={{ paddingTop: '80px' }}>\n        <Button\n          onClick={props.logoutRequest}\n          style={{ marginRight: 0 }}\n          size=\"small\"\n        >\n          Logout\n        </Button>\n      </div>\n    );\n  }\n  return null;\n};\n\nLogoutButton.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  logoutRequest: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { auth: { isAuthenticated } } = state;\n\n  return {\n    isAuthenticated,\n  };\n};\n\nconst mapDispatchToProps = {\n  logoutRequest,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutButton);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoginForm from '../LoginForm';\nimport Shortener from '../Shortener';\nimport LogoutButton from '../LogoutButton';\n\nconst Dashboard = props => (\n  <Fragment>\n    <h1>aqwi.re url shortener</h1>\n    {props.isAuthenticated ? (\n      <Fragment>\n        <Shortener />\n        <LogoutButton />\n      </Fragment>\n    ) : (\n      <LoginForm />\n    )}\n  </Fragment>\n);\n\nDashboard.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { auth: { isAuthenticated } } = state;\n\n  return {\n    isAuthenticated,\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { decodeUrlRequest } from '../../actions/shortenerActions';\n\nclass RedirectToUrl extends Component {\n  componentDidMount() {\n    const { match: { params: { encodedPk } } } = this.props;\n    this.props.decodeUrlRequest(encodedPk);\n  }\n\n  render() {\n    const { redirectUrl } = this.props;\n    if (redirectUrl) {\n      return (\n        <p>{`Redirecting you to ${redirectUrl}`}</p>\n      );\n    }\n    return (\n      <p>Redirecting you to...</p>\n    );\n  }\n}\n\nRedirectToUrl.propTypes = {\n  match: PropTypes.shape({\n    isExact: PropTypes.bool.isRequired,\n    params: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n  decodeUrlRequest: PropTypes.func.isRequired,\n  redirectUrl: PropTypes.string,\n};\n\nRedirectToUrl.defaultProps = {\n  redirectUrl: '',\n};\n\nconst mapStateToProps = (state) => {\n  const { shortener: { redirectUrl } } = state;\n\n  return {\n    redirectUrl,\n  };\n};\n\nconst mapDispatchToProps = {\n  decodeUrlRequest,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RedirectToUrl);\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  withRouter,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  AppAlert,\n  Dashboard,\n  RedirectToUrl,\n} from '../components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <AppAlert />\n    <Switch>\n      <Route exact path=\"/:encodedPk\" render={ownProps => <RedirectToUrl {...ownProps} />} />\n      <Route exact path=\"/\" render={ownProps => <Dashboard {...ownProps} />} />\n    </Switch>\n  </div>\n);\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}